{"version":3,"sources":["webpack:///resize-detection.min.js","webpack:///webpack/bootstrap 4270c03514a8bb291410","webpack:///./_src/js/public-resize-detection.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","7","jQuery","$","window","load","toggle","detect_wrong_imgs","revert_detection","on","resize_image","each","ele","this","css","css_width","replace","css_height","img_width","prop","img_height","higher_width","higher_height","smaller_width","smaller_height","attachment_id","data","before_content","before","after","addClass","remove","removeClass","params","action","resize_nonce","wp_smush_resize_vars","ajax_nonce","ajaxurl","res","done"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMMC,EACA,SAAUvB,EAAQD,EAASH,GAEjC,YEtEA4B,QAAQ,SAAWC,GASlBA,EAAGC,QAASC,KAAM,WAGjBF,EAAG,wCAAyCG,OAAQ,WACnDC,KACE,WACFC,MAGDL,EAAG,QAASM,GAAI,QAAS,uBAAwBC,IAUlD,IAAIH,GAAoB,WAEvBJ,EAAG,gCAAiCQ,KAAM,WAEzC,GAAIC,GAAMT,EAAGU,KAGb,IAA4B,OAAvBD,EAAIE,IAAK,UAA8C,OAAxBF,EAAIE,IAAK,UAC5C,OAAO,CAIR,IAAIC,GAAYH,EAAIE,IAAK,SAAUE,QAAS,KAAM,IACjDC,EAAaL,EAAIE,IAAK,UAAWE,QAAS,KAAM,IAChDE,EAAYN,EAAIO,KAAM,gBACtBC,EAAaR,EAAIO,KAAM,iBACvBE,EAAeN,EAAYG,EAC3BI,EAAgBL,EAAaG,EAC7BG,EAAgBR,EAAYG,EAC5BM,EAAiBP,EAAaG,EAC9BK,EAAgBb,EAAIc,KAAM,gBAG3B,MAAML,GAAiBC,GAAkBC,GAAkBC,GAC1D,OAAO,CAIR,IAAuB,KAAlBC,GAAwBA,GAAiB,EAC7C,OAAO,CAIR,IAAIE,GAAiB,yDACST,EAAY,QAAUE,EAAa,qIAEjBL,EAAY,QAAUE,EAAa,8GACqBQ,EAAgB,iCAMxHb,GAAIgB,OAAQD,GACZf,EAAIiB,MAJgB,IAOpBjB,EAAIkB,SAAU,yBAUZtB,EAAmB,WAGtBL,EAAG,qBAAsB4B,SAGzB5B,EAAG,uBAAwB6B,YAAa,uBASrCtB,EAAe,WAElB,GAAIE,GAAMT,EAAGU,KAEbD,GAAIkB,SAAU,0BAGd,IAAIG,IACHC,OAAQ,oBACRT,cAAeb,EAAIc,KAAM,iBACzBS,aAAcC,qBAAqBC,WAIpClC,GAAEX,IAAK4C,qBAAqBE,QAASL,EAAQ,SAAWM,GAEvD3B,EAAIoB,YAAa,6BAEdQ,KAAM,SAAWD,GAEpB3B,EAAIoB,YAAa","file":"resize-detection.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 7:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\njQuery(function ($) {\n\n\t/**\n  * After page load, initialize toggle event.\n  *\n  * On detection link click, show all wrongly scaled images with\n  * a highlighted border and resize box.\n  * Upon clicking again, remove highlights.\n  */\n\t$(window).load(function () {\n\n\t\t// Handle detect link click.\n\t\t$('#wp-admin-bar-smush-resize-detection').toggle(function () {\n\t\t\tdetect_wrong_imgs();\n\t\t}, function () {\n\t\t\trevert_detection();\n\t\t});\n\n\t\t$('body').on('click', '.smush-resize-submit', resize_image);\n\t});\n\n\t/**\n  * Function to highlight all scaled images.\n  *\n  * Add yellow border and then show one small box to\n  * resize the images as per the required size, on fly.\n  */\n\tvar detect_wrong_imgs = function detect_wrong_imgs() {\n\n\t\t$('body img[data-attachment-id]').each(function () {\n\n\t\t\tvar ele = $(this);\n\n\t\t\t// If width attribute is not set, do not continue.\n\t\t\tif (ele.css('width') === null || ele.css('height') === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Get defined width and height.\n\t\t\tvar css_width = ele.css('width').replace('px', ''),\n\t\t\t    css_height = ele.css('height').replace('px', ''),\n\t\t\t    img_width = ele.prop('naturalWidth'),\n\t\t\t    img_height = ele.prop('naturalHeight'),\n\t\t\t    higher_width = css_width < img_width,\n\t\t\t    higher_height = css_height < img_height,\n\t\t\t    smaller_width = css_width > img_width,\n\t\t\t    smaller_height = css_height > img_height,\n\t\t\t    attachment_id = ele.data('attachment-id');\n\n\t\t\t// Incase image is in correct size, do not continue.\n\t\t\tif (!higher_width && !higher_height && !smaller_width && !smaller_height) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Continue only if image has a valid attachment id.\n\t\t\tif (attachment_id === '' || attachment_id <= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Create HTML content to append.\n\t\t\tvar before_content = '<div class=\"smush-resize-box\">' + '<span class=\"smush-tag\">' + img_width + 'px × ' + img_height + 'px</span>' + '<i class=\"smush-front-icons smush-front-icon-arrows-in\" aria-hidden=\"true\"></i>' + '<span class=\"smush-tag smush-tag-success\">' + css_width + 'px × ' + css_height + 'px</span>' + '<i class=\"smush-front-icons smush-front-icon-arrow-right smush-resize-submit\" data-attachment-id=\"' + attachment_id + '\" aria-hidden=\"true\"></i>' + '</div>';\n\n\t\t\tvar after_content = '';\n\n\t\t\t// Append resize box to image.\n\t\t\tele.before(before_content);\n\t\t\tele.after(after_content);\n\n\t\t\t// Add a class to image.\n\t\t\tele.addClass('smush-detected-img');\n\t\t});\n\t};\n\n\t/**\n  * Function to remove highlights from images.\n  *\n  * Remove already added borders and highlights from\n  * images. Also remove the resize box.\n  */\n\tvar revert_detection = function revert_detection() {\n\n\t\t// Remove all detection boxes.\n\t\t$('.smush-resize-box').remove();\n\n\t\t// Remove custom class from images.\n\t\t$('.smush-detected-img').removeClass('smush-detected-img');\n\t};\n\n\t/**\n  * Function to resize image via CDN.\n  *\n  * Send ajax request and set new resized version\n  * based on the required container size.\n  */\n\tvar resize_image = function resize_image() {\n\n\t\tvar ele = $(this);\n\n\t\tele.addClass('smush-front-icon-loader');\n\n\t\t// Send a ajax request to set new resized version.\n\t\tvar params = {\n\t\t\taction: 'smush_auto_resize',\n\t\t\tattachment_id: ele.data('attachment-id'),\n\t\t\tresize_nonce: wp_smush_resize_vars.ajax_nonce\n\t\t};\n\n\t\t// Set the new resized version of image.\n\t\t$.get(wp_smush_resize_vars.ajaxurl, params, function (res) {\n\n\t\t\tele.removeClass('smush-front-icon-loader');\n\t\t}).done(function (res) {\n\n\t\t\tele.removeClass('smush-front-icon-loader');\n\t\t});\n\t};\n});\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// resize-detection.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4270c03514a8bb291410","jQuery( function ( $ ) {\n\n\t/**\n\t * After page load, initialize toggle event.\n\t *\n\t * On detection link click, show all wrongly scaled images with\n\t * a highlighted border and resize box.\n\t * Upon clicking again, remove highlights.\n\t */\n\t$( window ).load( function () {\n\n\t\t// Handle detect link click.\n\t\t$( '#wp-admin-bar-smush-resize-detection' ).toggle( function () {\n\t\t\tdetect_wrong_imgs();\n\t\t}, function () {\n\t\t\trevert_detection();\n\t\t} );\n\n\t\t$( 'body' ).on( 'click', '.smush-resize-submit', resize_image );\n\n\t} );\n\n\t/**\n\t * Function to highlight all scaled images.\n\t *\n\t * Add yellow border and then show one small box to\n\t * resize the images as per the required size, on fly.\n\t */\n\tvar detect_wrong_imgs = function () {\n\n\t\t$( 'body img[data-attachment-id]' ).each( function () {\n\n\t\t\tvar ele = $( this );\n\n\t\t\t// If width attribute is not set, do not continue.\n\t\t\tif ( ele.css( 'width' ) === null || ele.css( 'height' ) === null ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Get defined width and height.\n\t\t\tvar css_width = ele.css( 'width' ).replace( 'px', '' ),\n\t\t\t\tcss_height = ele.css( 'height' ).replace( 'px', '' ),\n\t\t\t\timg_width = ele.prop( 'naturalWidth' ),\n\t\t\t\timg_height = ele.prop( 'naturalHeight' ),\n\t\t\t\thigher_width = css_width < img_width,\n\t\t\t\thigher_height = css_height < img_height,\n\t\t\t\tsmaller_width = css_width > img_width,\n\t\t\t\tsmaller_height = css_height > img_height,\n\t\t\t\tattachment_id = ele.data( 'attachment-id' );\n\n\t\t\t// Incase image is in correct size, do not continue.\n\t\t\tif ( !higher_width && !higher_height && !smaller_width && !smaller_height ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Continue only if image has a valid attachment id.\n\t\t\tif ( attachment_id === '' || attachment_id <= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Create HTML content to append.\n\t\t\tvar before_content = '<div class=\"smush-resize-box\">' +\n\t\t\t\t'<span class=\"smush-tag\">' + img_width + 'px × ' + img_height + 'px</span>' +\n\t\t\t\t'<i class=\"smush-front-icons smush-front-icon-arrows-in\" aria-hidden=\"true\"></i>' +\n\t\t\t\t'<span class=\"smush-tag smush-tag-success\">' + css_width + 'px × ' + css_height + 'px</span>' +\n\t\t\t\t'<i class=\"smush-front-icons smush-front-icon-arrow-right smush-resize-submit\" data-attachment-id=\"' + attachment_id + '\" aria-hidden=\"true\"></i>' +\n\t\t\t\t'</div>';\n\n\t\t\tvar after_content = '';\n\n\t\t\t// Append resize box to image.\n\t\t\tele.before( before_content );\n\t\t\tele.after( after_content );\n\n\t\t\t// Add a class to image.\n\t\t\tele.addClass( 'smush-detected-img' );\n\t\t} );\n\t};\n\n\t/**\n\t * Function to remove highlights from images.\n\t *\n\t * Remove already added borders and highlights from\n\t * images. Also remove the resize box.\n\t */\n\tvar revert_detection = function () {\n\n\t\t// Remove all detection boxes.\n\t\t$( '.smush-resize-box' ).remove();\n\n\t\t// Remove custom class from images.\n\t\t$( '.smush-detected-img' ).removeClass( 'smush-detected-img' );\n\t};\n\n\t/**\n\t * Function to resize image via CDN.\n\t *\n\t * Send ajax request and set new resized version\n\t * based on the required container size.\n\t */\n\tvar resize_image = function () {\n\n\t\tvar ele = $( this );\n\n\t\tele.addClass( 'smush-front-icon-loader' );\n\n\t\t// Send a ajax request to set new resized version.\n\t\tvar params = {\n\t\t\taction: 'smush_auto_resize',\n\t\t\tattachment_id: ele.data( 'attachment-id' ),\n\t\t\tresize_nonce: wp_smush_resize_vars.ajax_nonce,\n\t\t};\n\n\t\t// Set the new resized version of image.\n\t\t$.get( wp_smush_resize_vars.ajaxurl, params, function ( res ) {\n\n\t\t\tele.removeClass( 'smush-front-icon-loader' );\n\n\t\t} ).done( function ( res ) {\n\n\t\t\tele.removeClass( 'smush-front-icon-loader' );\n\t\t} );\n\t};\n} );\n\n\n\n// WEBPACK FOOTER //\n// ./_src/js/public-resize-detection.js"],"sourceRoot":""}