/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./_src/js/public-resize-detection.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./_src/js/public-resize-detection.js":
/*!********************************************!*\
  !*** ./_src/js/public-resize-detection.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


jQuery(function ($) {
	'use strict';

	/**
  * After page load, initialize toggle event.
  *
  * On detection link click, show all wrongly scaled images with
  * a highlighted border and resize box.
  * Upon clicking again, remove highlights.
  */

	$(window).load(function () {
		// Handle detect link click.
		$('#wp-admin-bar-smush-resize-detection').toggle(function () {
			return detect_wrong_imgs();
		}, function () {
			return revert_detection();
		});
	});

	/**
  * Function to highlight all scaled images.
  *
  * Add yellow border and then show one small box to
  * resize the images as per the required size, on fly.
  */
	var detect_wrong_imgs = function detect_wrong_imgs() {
		$('body img:not(.avatar)').each(function () {
			//$( 'body img[data-smush-image]' ).each( function () {
			var ele = $(this);

			// If width attribute is not set, do not continue.
			// @todo We need to check if we can detect images in other way.
			if (ele.css('width') === null || ele.css('height') === null) {
				return true;
			}

			// Get defined width and height.
			var css_width = ele.css('width').replace('px', ''),
			    css_height = ele.css('height').replace('px', ''),
			    img_width = ele.prop('naturalWidth'),
			    img_height = ele.prop('naturalHeight'),
			    higher_width = css_width * 1.5 < img_width,
			    higher_height = css_height * 1.5 < img_height,
			    smaller_width = css_width > img_width,
			    smaller_height = css_height > img_height;

			var tooltip_text = '';

			// In case image is in correct size, do not continue.
			if (!higher_width && !higher_height && !smaller_width && !smaller_height) {
				return true;
			}

			if (higher_width || higher_height) {
				tooltip_text = wp_smush_resize_vars.large_image;
			} else if (smaller_width || smaller_height) {
				tooltip_text = wp_smush_resize_vars.small_image;
			}

			tooltip_text = tooltip_text.replace('width', css_width);
			tooltip_text = tooltip_text.replace('height', css_height);

			// Create HTML content to append.
			var content = '<div class="smush-resize-box smush-tooltip smush-tooltip-constrained" data-tooltip="' + tooltip_text + '">' + '<span class="smush-tag">' + img_width + ' × ' + img_height + ' px</span>' + '<i class="smush-front-icons smush-front-icon-arrows-in" aria-hidden="true"></i>' + '<span class="smush-tag smush-tag-success">' + css_width + ' × ' + css_height + ' px</span>' + '</div>';

			// Append resize box to image.
			ele.before(content);

			// Add a class to image.
			ele.addClass('smush-detected-img');
		});
	};

	/**
  * Function to remove highlights from images.
  *
  * Remove already added borders and highlights from
  * images. Also remove the resize box.
  */
	var revert_detection = function revert_detection() {
		// Remove all detection boxes.
		$('.smush-resize-box').remove();

		// Remove custom class from images.
		$('.smush-detected-img').removeClass('smush-detected-img');
	};
});

/***/ })

/******/ });
//# sourceMappingURL=resize-detection.min.js.map